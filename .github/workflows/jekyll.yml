# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Jekyll

on:
  push:
    branches: [ jekyll ]
  pull_request:
    branches: [ jekyll ]

jobs:
  build:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     # node-version: [10.x, 12.x, 14.x]
    #     node-version: [10.21.0]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: jekyll
          fetch-depth: 0
      - uses: ruby/setup-ruby@ec02537da5712d66d4d50a0f33b7eb52773b5ed1
        with:
          ruby-version: '3.3.1' # Not needed with a .ruby-version file
          bundler-cache: true
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build
        uses: actions/jekyll-build-pages@v1
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3


    # fix git error: 
    #   fatal: unsafe repository ('/github/workspace' is owned by someone else)
    # - name: git config
    #   run: |
    #     git config --global --add safe.directory "$GITHUB_WORKSPACE"
    #     git config --global --list

    # Use GitHub Actions' cache to shorten build times and decrease load on servers
    # - uses: actions/cache@v3
    #   with:
    #     path: vendor/bundle
    #     key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile') }}
    #     restore-keys: |
    #       ${{ runner.os }}-gems-

    # - name: jekyll build
    #   uses: helaili/jekyll-action@v2
    #   with:
    #     pre_build_commands: |
    #       git config --global --add safe.directory "$GITHUB_WORKSPACE"
    #       git config --global --list
    #     jekyll_build_options: --future
    #     target_branch: gh-pages
    #     keep_history: true
    #     token: ${{ secrets.GITHUB_TOKEN }}

    - name: Executing remote command
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSHKEY }}
        script: cd ${{ secrets.PROJECT_PATH }} && git pull

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}